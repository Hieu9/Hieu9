openapi: 3.0.0
info:
  version: '1.0.1'
  description: "VNPOST GATEWAY API"
  title: VNPOST GATEWAY API
servers:
  - url: 'http://183.91.11.56:8001/v46.0'
    description: Production Server
  - url: 'http://183.91.11.56:9001/v46.0'
    description: Sandbox Server
  - url: 'http://localhost:9001/v46.0'
    description: Local Server
tags:
  - name: auth
    description: |
      User chatter login with username and password in SF.
  - name: account
    description: |
      Account use with SF API Restful.
  - name: Added_Value_in_Sales_Order__c
    description: |
      Added Value In Sales Order use with SF API Restful.
  - name: case
    description: |
      case use with SF API Restful.
  - name: contact
    description: |
      Contact use with SF API Restful.
  - name: deal
    description: |
      deal use with SF API Restful.
  - name: employee
    description: |
      Employee use with SF API Restful.
  - name: Ho_tro__c
    description: |
      Ho tro use with SF API Restful.    
  - name: lead
    description: |
      Lead use with SF API Restful.
  - name: note
    description: |
      Note use with SF API Restful.
  - name: POS__c
    description: |
      POS__c use with SF API Restful.
  - name: product
    description: |
      Product (Service) use with SF API Restful.
  - name: ObjectInfo
    description: |
      ObjectInfo use with SF API Restful.
  # - name: RecordType
  #   description: |
  #     RecordType use with SF API Restful.
  - name: Sales_Order__c
    description: |
      Sale Order use with SF API Restful.
  - name: status
    description: |
      Status use with SF API Restful.
  - name: task
    description: |
      Task use with SF API Restful.
  - name: Tien_trinh_xu_li__c
    description: |
      Tien_trinh_xu_li__c use with SF API Restful.
  - name: User
    description: |
      User use with SF API Restful.
  - name: Vi_pham__c
    description: |
      Vi_pham__c use with SF API Restful.
  - name: Sobjects
    description: |
      Sobjects use with SF API Restful.
  - name: Query
    description: |
      Query use with SF API Restful.
x-tagGroups:
  - name: auth
    tags:
      - auth
  - name: account
    tags:
      - account
  - name: added_value_in_sales_order
    tags:
      - Added_Value_in_Sales_Order__c
  - name: case
    tags:
      - case
  - name: contact
    tags:
      - contact
  - name: deal
    tags:
      - deal
  - name: employee
    tags:
      - employee
  - name: Ho_tro__c
    tags:
      - Ho_tro__c
  - name: lead
    tags:
      - lead
  - name: note
    tags:
      - note
  - name: POS__c
    tags:
      - POS__c
  - name: product
    tags:
      - product
  # - name: RecordType
  #   tags:
  #     - RecordType
  - name: Sales_Order__c
    tags:
      - Sales_Order__c
  - name: status
    tags:
      - status
  - name: task
    tags:
      - task
  - name: Tien_trinh_xu_li__c
    tags:
      - Tien_trinh_xu_li__c
  - name: User
    tags:
      - User
  - name: Vi_pham__c
    tags:
      - Vi_pham__c
  - name: ObjectInfo
    tags:
      - ObjectInfo
  - name: Sobjects
    tags:
      - Sobjects
  - name: Query
    tags:
      - Query
security:
  - ApiKey: []
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: User login into the system /auth/login
      security: []
      description: |
        User Login use client_id/client_secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthPassword'
        description: AuthPassword resource
        required: true
      responses:
        '200':
          description: token
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date when token expires
        '400':
          description: Invalid client_id/client_secret supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  # /auth/refresh:
  #   post:
  #     tags:
  #       - auth
  #     summary: Use token get refresh token /auth/refresh
  #     description: |
  #       Refresh token
  #     responses:
  #       '200':
  #         description: token
  #         schema:
  #           type: string
  #         headers:
  #           X-Rate-Limit:
  #             type: integer
  #             format: int32
  #             description: calls per hour allowed by the user
  #           X-Expires-After:
  #             type: string
  #             format: date-time
  #             description: date when token expires
  #       '400':
  #         description: Invalid username/password supplied
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '401':
  #         description: Unauthorize
  #         schema:
  #           $ref: '#/definitions/Error'
  /auth/logout:
    post:
      tags:
        - auth
      summary: User logout the system /auth/logout
      description: ""
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  # /auth/authorize:
  #   post:
  #     tags:
  #       - auth
  #     summary: User login authorize
  #     description: ""
  #     responses:
  #       '200':
  #         description: Successful operation
  #         schema:
  #           $ref: '#/definitions/Success'
  #       '401':
  #         description: Unauthorize
  #         schema:
  #           $ref: '#/definitions/Error'
  /account:
    get:
      tags:
        - account
      summary: Find list account /account
      description: "List account."
      operationId: getaccount
      parameters:
        - name: f
          in: query
          description: Fields
          required: false
          type: string
        - name: q
          in: query
          description: Conditions
          required: false
          type: string
        - name: limit
          in: query
          description: Limit
          required: false
          type: integer
        - name: offset
          in: query
          description: Offset
          required: false
          type: integer
        - name: orderBy
          in: query
          description: Order By
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/account"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - account
      summary: Create a account /account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/account'
        description: Account resource
        required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PostSuccess"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /account/{id}:
    get:
      tags:
        - account
      summary: Find account by id /account/{id}
      description: Returns a single account
      parameters:
        - name: id
          in: path
          description: ID of account to return
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/account"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - account
      summary: Update a account /account/{id}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/account'
        description: Account resource
        required: true
      parameters:
        - name: id
          in: path
          description: Account id to update
          required: true
          type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid parameters supplied
    delete:
      tags:
        - account
      summary: Deletes a account /account/{id}
      description: ""
      parameters:
        - name: id
          in: path
          description: Account id to delete
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        "204":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /Added_Value_in_Sales_Order__c:
    get:
      tags:
        - Added_Value_in_Sales_Order__c
      summary: Find list /Added_Value_in_Sales_Order__c
      description: "List Added_Value_in_Sales_Order__c."
      operationId: getAdded_Value_in_Sales_Order__c
      parameters:
        - name: f
          in: query
          description: Fields
          required: false
          type: string
        - name: q
          in: query
          description: Conditions
          required: false
          type: string
        - name: limit
          in: query
          description: Limit
          required: false
          type: integer
        - name: offset
          in: query
          description: Offset
          required: false
          type: integer
        - name: orderBy
          in: query
          description: Order By
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Added_Value_in_Sales_Order__c"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Added_Value_in_Sales_Order__c
      summary: Create a /Added_Value_in_Sales_Order__c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Added_Value_in_Sales_Order__c'
        description: Item resource
        required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PostSuccess"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /Added_Value_in_Sales_Order__c/{id}:
    get:
      tags:
        - Added_Value_in_Sales_Order__c
      summary: Find by id /Added_Value_in_Sales_Order__c/{id}
      description: Returns a single Added_Value_in_Sales_Order__c
      parameters:
        - name: id
          in: path
          description: ID of Added_Value_in_Sales_Order__c to return
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/Added_Value_in_Sales_Order__c"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - Added_Value_in_Sales_Order__c
      summary: Update a /Added_Value_in_Sales_Order__c/{id}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Added_Value_in_Sales_Order__c'
        description: Added_Value_in_Sales_Order__c resource
        required: true
      parameters:
        - name: id
          in: path
          description: Added_Value_in_Sales_Order__c id to update
          required: true
          type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid parameters supplied
    delete:
      tags:
        - Added_Value_in_Sales_Order__c
      summary: Deletes a /Added_Value_in_Sales_Order__c/{id}
      description: ""
      parameters:
        - name: id
          in: path
          description: Added_Value_in_Sales_Order__c id to delete
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        "204":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /case:
    get:
      tags:
        - case
      summary: Find list case /case
      description: "List case."
      parameters:
        - name: f
          in: query
          description: Fields
          required: false
          type: string
        - name: q
          in: query
          description: Conditions
          required: false
          type: string
        - name: limit
          in: query
          description: Limit
          required: false
          type: integer
        - name: offset
          in: query
          description: Offset
          required: false
          type: integer
        - name: orderBy
          in: query
          description: Order By
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/case"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - case
      summary: Create a case /case
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/case'
        description: Case resource
        required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PostSuccess"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /case/{id}:
    get:
      tags:
        - case
      summary: Find case by id /case/{id}
      description: Returns a single case
      parameters:
        - name: id
          in: path
          description: ID of case to return
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/case"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - case
      summary: Update a case /case/{id}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/case'
        description: Case resource
        required: true
      parameters:
        - name: id
          in: path
          description: Account id to update
          required: true
          type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid parameters supplied
    delete:
      tags:
        - case
      summary: Deletes a case /case/{id}
      description: ""
      parameters:
        - name: id
          in: path
          description: Case id to delete
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        "204":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /contact:
    get:
      tags:
        - contact
      summary: Find list contact /contact
      description: "List contact."
      operationId: getcontact
      parameters:
        - name: f
          in: query
          description: Fields
          required: false
          type: string
        - name: q
          in: query
          description: Conditions
          required: false
          type: string
        - name: limit
          in: query
          description: Limit
          required: false
          type: integer
        - name: offset
          in: query
          description: Offset
          required: false
          type: integer
        - name: orderBy
          in: query
          description: Order By
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/contact"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - contact
      summary: Create a contact /contact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contact'
        description: Contact resource
        required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PostSuccess"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /contact/{id}:
    get:
      tags:
        - contact
      summary: Find contact by id /contact/{id}
      description: Returns a single contact
      parameters:
        - name: id
          in: path
          description: ID of contact to return
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/contact"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - contact
      summary: Update a contact /contact/{id}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contact'
        description: Contact resource
        required: true
      parameters:
        - name: id
          in: path
          description: Contact id to update
          required: true
          type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid contact value
    delete:
      tags:
        - contact
      summary: Deletes a contact /contact/{id}
      description: ""
      parameters:
        - name: id
          in: path
          description: Contact id to delete
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        "204":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /deal:
    get:
      tags:
        - deal
      summary: Find list deal /deal
      description: "List deal."
      operationId: getdeal
      parameters:
        - name: f
          in: query
          description: Fields
          required: false
          type: string
        - name: q
          in: query
          description: Condtions
          required: false
          type: string
        - name: limit
          in: query
          description: Limit
          required: false
          type: integer
        - name: offset
          in: query
          description: Offset
          required: false
          type: integer
        - name: orderBy
          in: query
          description: Order By
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/deal"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - deal
      summary: Create a deal /deal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deal'
        description: deal resource
        required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PostSuccess"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /deal/{id}:
    get:
      tags:
        - deal
      summary: Find deal by id /deal/{id}
      description: Returns a single deal
      parameters:
        - name: id
          in: path
          description: ID of deal to return
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/deal"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - deal
      summary: Update a deal /deal/{id}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deal'
        description: deal resource
        required: true
      parameters:
        - name: id
          in: path
          description: deal id to update
          required: true
          type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid parameters supplied
    delete:
      tags:
        - deal
      summary: Deletes a deal /deal/{id}
      description: ""
      parameters:
        - name: id
          in: path
          description: deal id to delete
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        "204":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /employee:
    get:
      tags:
        - employee
      summary: Find list employee /employee
      description: "List employee."
      operationId: getemployee
      parameters:
        - name: f
          in: query
          description: Fields
          required: false
          type: string
        - name: q
          in: query
          description: Conditions
          required: false
          type: string
        - name: limit
          in: query
          description: Limit
          required: false
          type: integer
        - name: offset
          in: query
          description: Offset
          required: false
          type: integer
        - name: orderBy
          in: query
          description: Order By
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/employee"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - employee
      summary: Create a employee /employee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employee'
        description: Trace Item resource
        required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            employees:
              $ref: "#/definitions/PostSuccess"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /employee/{id}:
    get:
      tags:
        - employee
      summary: Find employee by id /employee/{id}
      description: Returns a single employee
      parameters:
        - name: id
          in: path
          description: ID of employee to return
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/employee"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - employee
      summary: Update a employee /employee/{id}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employee'
        description: Trace Item resource
        required: true
      parameters:
        - name: id
          in: path
          description: Trace Item id to update
          required: true
          type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid parameters supplied
    delete:
      tags:
        - employee
      summary: Deletes a employee /employee/{id}
      description: ""
      parameters:
        - name: id
          in: path
          description: employee id to delete
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        "204":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /Ho_tro__c:
    get:
      tags:
        - Ho_tro__c
      summary: Find list Ho_tro__c /Ho_tro__c
      description: "List Ho_tro__c."
      operationId: getHo_tro__c
      parameters:
        - name: f
          in: query
          description: Fields
          required: false
          type: string
        - name: q
          in: query
          description: Conditions
          required: false
          type: string
        - name: limit
          in: query
          description: Limit
          required: false
          type: integer
        - name: offset
          in: query
          description: Offset
          required: false
          type: integer
        - name: orderBy
          in: query
          description: Order By
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Ho_tro__c"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Ho_tro__c
      summary: Create a Ho_tro__c /Ho_tro__c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ho_tro__c'
        description: Ho_tro__c resource
        required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PostSuccess"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /Ho_tro__c/{id}:
    get:
      tags:
        - Ho_tro__c
      summary: Find Ho_tro__c by id /Ho_tro__c/{id}
      description: Returns a single Ho_tro__c
      parameters:
        - name: id
          in: path
          description: ID of Ho_tro__c to return
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/Ho_tro__c"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - Ho_tro__c
      summary: Update a Ho_tro__c /Ho_tro__c/{id}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ho_tro__c'
        description: Ho_tro__c resource
        required: true
      parameters:
        - name: id
          in: path
          description: Ho_tro__c id to update
          required: true
          type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid parameters supplied
    delete:
      tags:
        - Ho_tro__c
      summary: Deletes a Ho_tro__c /Ho_tro__c/{id}
      description: ""
      parameters:
        - name: id
          in: path
          description: Ho_tro__c id to delete
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        "204":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /lead:
    get:
      tags:
        - lead
      summary: Find list lead /lead
      description: "List lead."
      operationId: getlead
      parameters:
        - name: f
          in: query
          description: Fields
          required: false
          type: string
        - name: q
          in: query
          description: Conditions
          required: false
          type: string
        - name: limit
          in: query
          description: Limit
          required: false
          type: integer
        - name: offset
          in: query
          description: Offset
          required: false
          type: integer
        - name: orderBy
          in: query
          description: Order By
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/lead"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - lead
      summary: Create a lead /lead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lead'
        description: Lead resource
        required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PostSuccess"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /lead/{id}:
    get:
      tags:
        - lead
      summary: Find lead by id /lead/{id}
      description: Returns a single lead
      parameters:
        - name: id
          in: path
          description: ID of lead to return
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/lead"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - lead
      summary: Update a lead /lead/{id}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lead'
        description: Lead resource
        required: true
      parameters:
        - name: id
          in: path
          description: lead id to update
          required: true
          type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid parameters supplied
    delete:
      tags:
        - lead
      summary: Deletes a lead /lead/{id}
      description: ""
      parameters:
        - name: id
          in: path
          description: Lead id to delete
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        "204":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /lead/convert:
    post:
      tags:
        - lead
      summary: Convert leads /lead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/leadConvert'
        description: Lead resource
        required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PostSuccess"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /POS__c:
    get:
      tags:
        - POS__c
      summary: Find list pos /POS__c
      description: "List POS__c."
      operationId: getPOS__c
      parameters:
        - name: f
          in: query
          description: Fields
          required: false
          type: string
        - name: q
          in: query
          description: Conditions
          required: false
          type: string
        - name: limit
          in: query
          description: Limit
          required: false
          type: integer
        - name: offset
          in: query
          description: Offset
          required: false
          type: integer
        - name: orderBy
          in: query
          description: Order By
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/POS__c"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /POS__c/{id}:
    get:
      tags:
        - POS__c
      summary: Find POS__c by id /POS__c/{id}
      description: Returns a single pos
      parameters:
        - name: id
          in: path
          description: ID of POS__c to return
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/POS__c"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
  /product:
    get:
      tags:
        - product
      summary: Find list product /product
      description: "List product."
      operationId: getproduct
      parameters:
        - name: f
          in: query
          description: Fields
          required: false
          type: string
        - name: q
          in: query
          description: Conditions
          required: false
          type: string
        - name: limit
          in: query
          description: Limit
          required: false
          type: integer
        - name: offset
          in: query
          description: Offset
          required: false
          type: integer
        - name: orderBy
          in: query
          description: Order By
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/product"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - product
      summary: Create a product /product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
        description: Product resource
        required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PostSuccess"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /product/{id}:
    get:
      tags:
        - product
      summary: Find product by id /product/{id}
      description: Returns a single product
      parameters:
        - name: id
          in: path
          description: ID of product to return
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/product"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - product
      summary: Update a product /product/{id}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
        description: Product resource
        required: true
      parameters:
        - name: id
          in: path
          description: Product id to update
          required: true
          type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid parameters supplied
    delete:
      tags:
        - product
      summary: Deletes a product /product/{id}
      description: ""
      parameters:
        - name: id
          in: path
          description: Product id to delete
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        "204":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /object-info/{objectApiName}:
    get:
      tags:
        - ObjectInfo
      summary: Find list /object-info/{objectApiName}
      description: "List Object Info."
      operationId: getObjectInfo
      parameters:
        - name: objectApiName
          in: path
          description: Object Api Name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Picklist"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /object-info/{objectApiName}/picklist-values/{recordTypeId}:
    get:
      tags:
        - ObjectInfo
      summary: Find list /object-info/{objectApiName}/picklist-values/{recordTypeId}
      description: "List Picklist."
      operationId: getPicklistValuesByRecordTypeId
      parameters:
        - name: objectApiName
          in: path
          description: Object Api Name
          required: true
          type: string
        - name: recordTypeId
          in: path
          description: Record Type Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Picklist"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /object-info/{objectApiName}/picklist-values/{recordTypeId}/{fieldApiName}:
    get:
      tags:
        - ObjectInfo
      summary: Find Detail /object-info/{objectApiName}/picklist-values/{recordTypeId}/{fieldApiName}
      description: "List Picklist."
      operationId: getPicklistValuesDetailByRecordTypeId
      parameters:
        - name: objectApiName
          in: path
          description: Object Api Name
          required: true
          type: string
        - name: recordTypeId
          in: path
          description: Record Type Id
          required: true
          type: string
        - name: fieldApiName
          in: path
          description: Field Api Name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Picklist"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  # /RecordType:
  #   get:
  #     tags:
  #       - RecordType
  #     summary: Find list /RecordType
  #     description: "List RecordType."
  #     operationId: getRecordType
  #     parameters:
  #       - name: f
  #         in: query
  #         description: Fields
  #         required: false
  #         type: string
  #       - name: q
  #         in: query
  #         description: Conditions
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         description: Limit
  #         required: false
  #         type: integer
  #       - name: offset
  #         in: query
  #         description: Offset
  #         required: false
  #         type: integer
  #       - name: orderBy
  #         in: query
  #         description: Order By
  #         required: false
  #         type: string
  #     responses:
  #       '200':
  #         description: successful operation
  #         schema:
  #           type: array
  #           items:
  #             $ref: "#/definitions/RecordType"
  #       '400':
  #         description: Invalid parameters supplied
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '401':
  #         description: Unauthorize
  #         schema:
  #           $ref: '#/definitions/Error'
  # /RecordType/{id}:
  #   get:
  #     tags:
  #       - RecordType
  #     summary: Find by id /RecordType/{id}
  #     description: Returns a single RecordType
  #     parameters:
  #       - name: id
  #         in: path
  #         description: ID of RecordType to return
  #         required: true
  #         type: string
  #     responses:
  #       "200":
  #         description: Successful operation
  #         schema:
  #           $ref: "#/definitions/RecordType"
  #       '400':
  #         description: Invalid parameters supplied
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '401':
  #         description: Unauthorize
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '404':
  #         description: Not found
  #         schema:
  #           $ref: '#/definitions/Error'
  /Sales_Order__c:
    get:
      tags:
        - Sales_Order__c
      summary: Find list Sales_Order__c /Sales_Order__c
      description: "List Sales_Order__c."
      operationId: getSales_Order__c
      parameters:
        - name: f
          in: query
          description: Fields
          required: false
          type: string
        - name: q
          in: query
          description: Conditions
          required: false
          type: string
        - name: limit
          in: query
          description: Limit
          required: false
          type: integer
        - name: offset
          in: query
          description: Offset
          required: false
          type: integer
        - name: orderBy
          in: query
          description: Order By
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Sales_Order__c"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Sales_Order__c
      summary: Create a Sales_Order__c /Sales_Order__c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sales_Order__c'
        description: Item resource
        required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PostSuccess"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /Sales_Order__c/{id}:
    get:
      tags:
        - Sales_Order__c
      summary: Find Sales_Order__c by id /Sales_Order__c/{id}
      description: Returns a single Sales_Order__c
      parameters:
        - name: id
          in: path
          description: ID of Sales_Order__c to return
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/Sales_Order__c"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - Sales_Order__c
      summary: Update a Sales_Order__c /Sales_Order__c/{id}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sales_Order__c'
        description: Sales_Order__c resource
        required: true
      parameters:
        - name: id
          in: path
          description: Sales_Order__c id to update
          required: true
          type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid parameters supplied
    delete:
      tags:
        - Sales_Order__c
      summary: Deletes a Sales_Order__c /Sales_Order__c/{id}
      description: ""
      parameters:
        - name: id
          in: path
          description: Sales_Order__c id to delete
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        "204":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /status:
    get:
      tags:
        - status
      summary: Find list status /status
      description: "List status."
      operationId: getstatus
      parameters:
        - name: f
          in: query
          description: Fields
          required: false
          type: string
        - name: q
          in: query
          description: Conditions
          required: false
          type: string
        - name: limit
          in: query
          description: Limit
          required: false
          type: integer
        - name: offset
          in: query
          description: Offset
          required: false
          type: integer
        - name: orderBy
          in: query
          description: Order By
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/status"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - status
      summary: Create a status /status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/status'
        description: Status resource
        required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PostSuccess"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /status/{id}:
    get:
      tags:
        - status
      summary: Find status by id /status/{id}
      description: Returns a single status
      parameters:
        - name: id
          in: path
          description: ID of status to return
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/status"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - status
      summary: Update a status /status/{id}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/status'
        description: Transaction resource
        required: true
      parameters:
        - name: id
          in: path
          description: Transaction id to update
          required: true
          type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid parameters supplied
    delete:
      tags:
        - status
      summary: Deletes a status /status/{id}
      description: ""
      parameters:
        - name: id
          in: path
          description: status id to delete
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        "204":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /task:
    get:
      tags:
        - task
      summary: Find list task /task
      description: "List task."
      parameters:
        - name: f
          in: query
          description: Fields
          required: false
          type: string
        - name: q
          in: query
          description: Conditions
          required: false
          type: string
        - name: limit
          in: query
          description: Limit
          required: false
          type: integer
        - name: offset
          in: query
          description: Offset
          required: false
          type: integer
        - name: orderBy
          in: query
          description: Order By
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/task"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - task
      summary: Create a task /task
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task'
        description: task resource
        required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PostSuccess"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /task/{id}:
    get:
      tags:
        - task
      summary: Find task by id /task/{id}
      description: Returns a single task
      parameters:
        - name: id
          in: path
          description: ID of task to return
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/task"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - task
      summary: Update a task /task/{id}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task'
        description: task resource
        required: true
      parameters:
        - name: id
          in: path
          description: task id to update
          required: true
          type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid parameters supplied
    delete:
      tags:
        - task
      summary: Deletes a task /task/{id}
      description: ""
      parameters:
        - name: id
          in: path
          description: task id to delete
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        "204":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /Tien_trinh_xu_li__c:
    get:
      tags:
        - Tien_trinh_xu_li__c
      summary: Find list Tien_trinh_xu_li__c /Tien_trinh_xu_li__c
      description: "List Tien_trinh_xu_li__c."
      operationId: getTien_trinh_xu_li__c
      parameters:
        - name: f
          in: query
          description: Fields
          required: false
          type: string
        - name: q
          in: query
          description: Conditions
          required: false
          type: string
        - name: limit
          in: query
          description: Limit
          required: false
          type: integer
        - name: offset
          in: query
          description: Offset
          required: false
          type: integer
        - name: orderBy
          in: query
          description: Order By
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Tien_trinh_xu_li__c"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Tien_trinh_xu_li__c
      summary: Create a Tien_trinh_xu_li__c /Tien_trinh_xu_li__c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tien_trinh_xu_li__c'
        description: Tien_trinh_xu_li__c resource
        required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PostSuccess"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /Tien_trinh_xu_li__c/{id}:
    get:
      tags:
        - Tien_trinh_xu_li__c
      summary: Find Tien_trinh_xu_li__c by id /Tien_trinh_xu_li__c/{id}
      description: Returns a single Tien_trinh_xu_li__c
      parameters:
        - name: id
          in: path
          description: ID of Tien_trinh_xu_li__c to return
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/Tien_trinh_xu_li__c"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - Tien_trinh_xu_li__c
      summary: Update a Tien_trinh_xu_li__c /Tien_trinh_xu_li__c/{id}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tien_trinh_xu_li__c'
        description: Tien_trinh_xu_li__c resource
        required: true
      parameters:
        - name: id
          in: path
          description: Tien_trinh_xu_li__c id to update
          required: true
          type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid parameters supplied
    delete:
      tags:
        - Tien_trinh_xu_li__c
      summary: Deletes a Tien_trinh_xu_li__c /Tien_trinh_xu_li__c/{id}
      description: ""
      parameters:
        - name: id
          in: path
          description: Tien_trinh_xu_li__c id to delete
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        "204":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /User:
    get:
      tags:
        - User
      summary: Find list User /User
      description: "List User."
      operationId: getUser
      parameters:
        - name: f
          in: query
          description: Fields
          required: false
          type: string
        - name: q
          in: query
          description: Conditions
          required: false
          type: string
        - name: limit
          in: query
          description: Limit
          required: false
          type: integer
        - name: offset
          in: query
          description: Offset
          required: false
          type: integer
        - name: orderBy
          in: query
          description: Order By
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              []
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /User/{id}:
    get:
      tags:
        - User
      summary: Find User by id /User/{id}
      description: Returns a single User
      parameters:
        - name: id
          in: path
          description: ID of User to return
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            {}
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
  /Vi_pham__c:
    get:
      tags:
        - Vi_pham__c
      summary: Find list Vi_pham__c /Vi_pham__c
      description: "List Vi_pham__c."
      operationId: getVi_pham__c
      parameters:
        - name: f
          in: query
          description: Fields
          required: false
          type: string
        - name: q
          in: query
          description: Conditions
          required: false
          type: string
        - name: limit
          in: query
          description: Limit
          required: false
          type: integer
        - name: offset
          in: query
          description: Offset
          required: false
          type: integer
        - name: orderBy
          in: query
          description: Order By
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Vi_pham__c"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Vi_pham__c
      summary: Create a Vi_pham__c /Vi_pham__c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vi_pham__c'
        description: Vi_pham__c resource
        required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PostSuccess"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /Vi_pham__c/{id}:
    get:
      tags:
        - Vi_pham__c
      summary: Find Vi_pham__c by id /Vi_pham__c/{id}
      description: Returns a single Vi_pham__c
      parameters:
        - name: id
          in: path
          description: ID of Vi_pham__c to return
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/Vi_pham__c"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - Vi_pham__c
      summary: Update a Vi_pham__c /Vi_pham__c/{id}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vi_pham__c'
        description: Vi_pham__c resource
        required: true
      parameters:
        - name: id
          in: path
          description: Vi_pham__c id to update
          required: true
          type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid parameters supplied
    delete:
      tags:
        - Vi_pham__c
      summary: Deletes a Vi_pham__c /Vi_pham__c/{id}
      description: ""
      parameters:
        - name: id
          in: path
          description: Vi_pham__c id to delete
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        "204":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /note:
    get:
      tags:
        - note
      summary: Find list note /note
      description: "List note."
      parameters:
        - name: objId
          in: query
          description: Item object Id
          required: true
          type: string
        - name: limit
          in: query
          description: Limit
          required: false
          type: integer
        - name: offset
          in: query
          description: Offset
          required: false
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/note"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - note
      summary: Create a note /note
      parameters:
        - name: objId
          in: query
          description: Item object Id
          required: true
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/note'
        description: Status resource
        required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PostSuccess"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /note/{id}:
    get:
      tags:
        - note
      summary: Find note by id /note/{id}
      description: Returns a single note
      parameters:
        - name: id
          in: path
          description: ID of note to return
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/note"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - note
      summary: Update a note /note/{id}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/note'
        description: Transaction resource
        required: true
      parameters:
        - name: id
          in: path
          description: Transaction id to update
          required: true
          type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid parameters supplied
    delete:
      tags:
        - note
      summary: Deletes a note /note/{id}
      parameters:
        - name: id
          in: path
          description: note id to delete
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        "204":
          description: Successful operation
          schema:
            $ref: '#/definitions/Success'
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /note/{id}/content:
    get:
      tags:
        - note
      summary: Find note content by id /note/{id}/content
      description: Returns a single note content
      parameters:
        - name: id
          in: path
          description: ID of note content to return
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/note"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
  /note/count:
    get:
      tags:
        - note
      summary: Total note /note/count
      description: "Count Note"
      parameters:
        - name: objId
          in: query
          description: Item object Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/note"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
  /sobjects/{object}/describe:
    get:
      tags:
        - Sobjects
      summary: Find describe by object /sobjects/{object}/describe
      description: |
        Returns describe sobjects with picklist value in field with Sobjects:
        Lead, Account, Contact, Employee__c, User, Deal -> Opportunity, Product -> Product2, Status -> Status__c, Transaction -> Sales_Order__c
      parameters:
        - name: object
          in: path
          description: |
            object: Lead, Account, Contact, Employee__c, User, Opportunity (Deal), Product2 (Product), Status__c (Status), Sales_Order__c (Transaction)
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
  # /query:
  #   get:
  #     tags:
  #       - query
  #     summary: Use Soql Syntax /query
  #     description: |
  #       Return data use soql syntax
  #     parameters:
  #       - name: q
  #         in: query
  #         description: SOQL query
  #         required: true
  #         type: string
  #     responses:
  #       "200":
  #         description: Successful operation
  #       '400':
  #         description: Invalid parameters supplied
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '401':
  #         description: Unauthorize
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '404':
  #         description: Not found
  #         schema:
  #           $ref: '#/definitions/Error'
  # /query/statistic:
  #   get:
  #     tags:
  #       - query
  #     summary: Use Soql Syntax /query/statistic
  #     description: |
  #       Return statistic
  #     parameters:
  #       - name: q
  #         in: query
  #         description: |
  #           Object:Condition Ví dụ: Lead:CreatedDate=THIS_MONTH,Contact:CreatedDate=THIS_MONTH
  #         required: false
  #         type: string
  #     responses:
  #       "200":
  #         description: Successful operation
  #       '400':
  #         description: Invalid parameters supplied
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '401':
  #         description: Unauthorize
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '404':
  #         description: Not found
  #         schema:
  #           $ref: '#/definitions/Error'
  /query/listIds:
    post:
      tags:
        - Query
      summary: Get a /query/listIds
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Object
                - Ids
              properties:
                Fields:
                  description: Fields Name (Id, UUID__c ...)
                  type: string
                  example: "Id, UUID__c"
                Object:
                  description: Object Name (Case, Account, Contact, Lead ...)
                  type: string
                  example: "Case"
                ExternalId:
                  description: Field External Id
                  type: string
                  example: "UUID__c"
                Ids:
                  description: List Id
                  type: array
                  example: ["5002v00002a2Z5wAAE","5002v00002a2Z6uAAE"]
        description: Status resource
        required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PostSuccess"
        '400':
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorize
          schema:
            $ref: '#/definitions/Error'  
definitions:
  account:
    type: object
    required:
      - Name
      - Mobile__c
    properties:
      AccountSource:
        description: Account Source
        type: string
        enum: ['Quảng cáo truyền thống','Nội bộ','Bộ phận CSKH','Hội nghị khách hàng','Đối tác giới thiệu','Bộ/ Ban ngành/ Tổ chức','Giao dịch tại quầy','Mạng xã hội','Website','Nguồn unqualified','Khách hàng giới thiệu']
      AnnualRevenue:
        description: Annual Revenue
        type: number
        example: 0
      BillingCity:
        description: Billing City
        type: string
        example: ""
      BillingCountry:
        description: Billing Country
        type: string
        example: ""
      BillingGeocodeAccuracy:
        description: Billing Geocode Accuracy
        type: string
        example: ""
      BillingLatitude:
        description: Billing Latitude
        type: string
        example: ""
      BillingLongitude:
        description: Billing Longitude
        type: string
        example: ""
      BillingPostalCode:
        description: Billing Postal Code
        type: string
        example: ""
      BillingState:
        description: Billing State
        type: string
        example: ""
      BillingStreet:
        description: Billing Street
        type: string
        example: ""
      BusinessID__c:
        description: Business ID
        type: string
        example: ""
      Ca_nh_n_T_ch_c__c:
        description: Cá nhân / Tổ chức
        type: string
        enum: ['Cá nhân','Tổ chức','Khác']
      CurrencyIsoCode:
        description: Account Currency
        type: string
        example: ""
      Customer_s_Service__c:
        description: Customer's Service
        type: string
        example: ""
      Description:
        description: Description
        type: string
        example: ""
      Email__c:
        description: Email
        type: string
        example: ""
      Employee__c:
        description: Employee
        type: string
        example: ""
      External_Name__c:
        description: External Name
        type: string
        example: ""
      Facebook__c:
        description: Facebook
        type: string
        example: ""
      ID_he_thong_cu__c:
        description: ID hệ thống cũ
        type: string
        maxLength: 20
        example: ""
      Industry:
        description: Industry
        type: string
        enum: ['Agriculture','Apparel','Banking','Biotechnology','Chemicals','Communications','Construction','Consulting','Education','Electronics','Energy','Engineering','Entertainment','Environmental','Finance','Food & Beverage','Government','Healthcare','Hospitality','Insurance','Machinery','Manufacturing','Media','Not For Profit','Other','Recreation','Retail','Shipping','Technology','Telecommunications','Transportation','Utilities']
      Jigsaw:
        description: Jigsaw
        type: string
        example: ""
      Ma_dang_ki_kinh_doanh__c:
        description: Mã đăng kí kinh doanh
        type: string
        maxLength: 50
        example: ""
      Mobile__c:
        description: Mobile
        type: string
        example: ""
      Name:
        description: Name
        type: string
        example: "Account Name"
      Nga_y_tha_nh_l_p__c:
        description: Ngày thành lập
        type: string
        example: "2019-10-10"
      NumberOfEmployees:
        description: Number Of Employees
        type: number
        example: 0
      OwnerId:
        description: Account Owner
        type: string
        example: ""
      OwnerPay__c:
        description: Owner Pay
        type: string
        example: ""
      ParentId:
        description: Parent Account
        type: string
        example: ""
      Phone:
        description: Phone
        type: string
        example: ""
      Post_Office__c:
        description: Post Office Code
        type: string
        example: ""
      ShippingCity:
        description: Shipping City
        type: string
        example: ""
      ShippingCountry:
        description: Shipping Country
        type: string
        example: ""
      ShippingGeocodeAccuracy:
        description: Shipping Geocode Accuracy
        type: string
        example: ""
      ShippingLatitude:
        description: Shipping Latitude
        type: string
        example: ""
      ShippingLongitude:
        description: Shipping Longitude
        type: string
        example: ""
      ShippingPostalCode:
        description: Shipping Postal Code
        type: string
        example: ""
      ShippingState:
        description: Shipping State
        type: string
        example: ""
      ShippingStreet:
        description: Shipping Street
        type: string
        example: ""
      SicDesc:
        description: Sic Desc
        type: string
        example: ""
      So_tai_khoan_ngan_hang__c:
        description: Số tài khoản ngân hàng
        type: string
        maxLength: 50
        example: ""
      Status__c:
        description: Status
        type: string
        maxLength: 50
        example: ""
      TaxCode__c:
        description: Tax Code
        type: string
        example: ""
      Ten_chu_tai_khoan__c:
        description: Tên chủ tài khoản
        type: string
        maxLength: 50
        example: ""
      Ten_ngan_hang__c:
        description: Tên ngân hàng
        type: string
        maxLength: 200
        example: ""
      Type:
        description: Type
        type: string
        enum: ['Đối thủ cạnh tranh','Đối tác','Đầu tư','Trọng tâm','Triển vọng','Trung gian']
      Website:
        description: Website
        type: string
        example: ""
      Zalo__c:
        description: Zalo
        type: string
        example: ""
    xml:
      name: account
  Added_Value_in_Sales_Order__c:
    type: object
    required:
      - Tracking_Code__c
    properties:
      Actual_Storage_Time__c:
        description: Tracking Code
        type: string
        maxLength: 20
        example: ""
      Added_Value_Service_Fee__c:
        description: Added Value Service Fee
        type: string
        example: ""
      Added_Value_Service_Name__c:
        description: Added Value Service Name
        type: string
        example: ""
      Attached_Amount__c:
        description: Attached Amount
        type: number
        example: ""
      COD_Amount__c:
        description: COD Amount
        type: number
        example: ""
      COD_Delivery_Address__c:
        description: COD Delivery Address
        type: string
        example: ""
      COD_Delivery_Name__c:
        description: COD Delivery Name
        type: string
        example: ""
        maxLength: 200
      COD_Fee_Payer__c:
        description: COD Fee Payer
        type: string
        example: ""
      COD_Fee__c:
        description: COD Fee
        type: string
        example: ""
      COD_Status_on_Paypost__c:
        description: COD Status on Paypost
        type: string
        example: ""
      CurrencyIsoCode:
        description: Currency
        type: string
        example: ""
      Date_of_money_payment__c:
        description: Date of attched money payment
        type: string
        example: ""
      Fee_Payer__c:
        description: Fee Payer
        type: string
        example: ""
      Generated_Status_Date__c:
        description: Generated Status Date
        type: string
        example: ""
      Generated_Status__c:
        description: Generated Status
        type: string
        maxLength: 200
        example: ""
      Generated_Tracking_Code__c:
        description: Generated Tracking Code
        type: string
        maxLength: 20
        example: ""
      Goods_Value__c:
        description: Goods Value
        type: number
        example: ""
      New_Shipping_Address__c:
        description: New Shipping Address
        type: string
        example: ""
      New_Shipping_Name__c:
        description: New Shipping Name
        type: string
        maxLength: 200
        example: ""
      New_Shipping_Phone__c:
        description: New Shipping Phone
        type: string
        example: ""
      OwnerId:
        description: User Id
        type: string
        example: ""
      Payment_Status__c:
        description: Payment Status
        type: string
        example: ""
      Paypost_Code__c:
        description: Paypost Code
        type: string
        maxLength: 20
        example: ""
      RecordTypeId:
        description: RecordType Id
        type: string
        example: ""
      Return_Date_Time__c:
        description: Return DateTime
        type: string
        example: ""
      Return_Shipping_Name__c:
        description: Return Shipping Name
        type: string
        maxLength: 50
        example: ""
      Return_Tracking_Code__c:
        description: Return Tracking Code
        type: string
        example: ""
      Service_Using_Customer__c:
        description: Service Using Customer
        type: string
        example: ""
      Shipping_Address__c:
        description: Shipping Address
        type: string
        example: ""
      Third_Party_Phone__c:
        description: Third Party Phone
        type: string
        example: ""
      Tracking_Code__c:
        description: Tracking Code
        type: string
        example: ""
      Type_of_Return1__c:
        description: Type of Return
        type: string
        example: ""
      T_n_b_n_th_3__c:
        description: Tên bên thứ 3
        type: string
        maxLength: 30
        example: ""
    xml:
      name: Added_Value_in_Sales_Order__c
  case:
    type: object
    properties:
      AccountId:
        description: Account Id Lookup(Account)
        type: string
        example: ""
      # BusinessHoursId:
      #   description: Business Hours ID Lookup(Business Hours)
      #   type: string
      #   example: ""
      Case_Reference_Code__c:
        description: Số tham chiếu
        type: string
        example: ""
        maxLength: 20
      # Check_Duplicate_Subjects__c:
      #   description: Check Duplicate Subjects
      #   type: string
      #   example: ""
      #   maxLength: 200
      Chi_Tra_Boi_Thuong__c:
        description: Chi Trả Bồi Thường
        type: string
        enum: ['Đã chi trả', 'Chưa chi trả']
      # Comments:
      #   description: Comments
      #   type: string
      #   example: ""
      ContactId:
        description: Contact Id Lookup(Contact)
        type: string
        example: ""
      Co_Boi_Thuong__c:
        description: Có Bồi Thường
        type: string
        example: ""
      Contact_address__c:
        description: Contact Address
        type: string
        example: ""
      Contact_commune__c:
        description: Contact commune
        type: string
        example: ""
      Contact_district__c:
        description: Contact district
        type: string
        example: ""
      Contact_province__c:
        description: Contact province
        type: string
        example: ""
      Account_number__c:
        description: Account number
        type: string
        example: ""
      Nga_y_ti_p_nh_n__c:
        description: Ngày tiếp nhận
        type: string
        example: ""
      CurrencyIsoCode:
        description: Currency Iso Code
        type: string
        example: ""
      Description:
        description: Description
        type: string
        example: "Description"
      # Doi_Tac_Vi_Pham__c:
      #   description: Lookup Doi Tac Vi Pham (Account Id)
      #   type: string
      #   example: ""
      Don_Vi_Chi_Tra_BT_Cho_KH__c:
        description: Don Vi Chi Tra BT Cho KH (POS Id) Lookup(POS)
        type: string
        example: ""
      # Don_Vi_Vi_Pham__c:
      #   description: Lookup Don Vi Vi Pham (POS Id)
      #   type: string
      #   example: ""
      Employee__c:
        description: Employee Id Lookup(Employee)
        type: string
        example: ""
      # EntitlementId:
      #   description: Entitlement Id Lookup(Entitlement)
      #   type: string
      #   example: ""
      # IsEscalated:
      #   description: Is Escalated
      #   type: string
      #   example: ""
      Ket_Qua_Dieu_Tra_Cua_Doi_Tac__c:
        description: Kết quả điều tra của đối tác
        type: string
        enum: ['Đồng ý','Không đồng ý','Chưa nhận được kết quả']
      Ket_Qua_Khieu_Nai__c:
        description: Kết quả khiếu nại
        type: string
        example: ""
      Legacy_Meta_Data__c:
        description: Field Unique of My Vnpost
        type: string
        example: ""
      Li_do_khieu_nai__c:
        description: Lí do khiếu nại
        type: string
        example: ""
      Li_Do_Mo_Lai__c:
        description: Lí do mở lại
        type: string
        example: ""
      Location_Type__c:
        description: Location Type
        type: string
        enum: ['Domestic', 'Oversea']
      Ngay_Boi_Thuong__c:
        description: Ngày bồi thường
        type: string
        example: "2019-11-22"
      Nhan_vien_CSKH__c:
        description: Nhân viên CSKH Lookup(Employee)
        type: string
        example: ""
      Nhom_dich_vu__c:
        description: Nhóm dịch vụ
        type: string
        enum: ['Bưu chính chuyển phát', 'Tài chính bưu chính','Phân phối truyền thông','Hành chính công','Phát hành báo chí','Khác']
      Noi_dung_ho_tro__c:
        description: Nội dung hỗ trợ
        type: string
        enum: ['Phát thư chuyển tiền gấp','Phát hàng gấp','Nhắc xử lý chuyển hoàn','Kiểm tra thông tin kết quả thủ tục hành chính','Phát lại','Thu gom gấp','Trả tiền COD gấp','Nhắc hủy đơn không thu gom','Bổ sung thông tin đơn hàng','Nhắc chuyển hoàn trước ngày']
      Noi_dung_ket_luan__c:
        description: Nội dung kết luận
        type: string
        example: ""
      Noi_dung_tu_van__c:
        description: Nội dung tư vấn
        type: string
        example: ""
      Origin:
        description: Origin
        type: string
        enum: ['Email', 'Điện thoại', 'Web', 'Facebook', 'Trực tiếp', 'Văn bản', 'MyVNPOST']
      OwnerId:
        description: Owner Id Lookup(User,Group)
        type: string
        example: ""
      # ParentId:
      #   description: Parent Id Lookup(Case)
      #   type: string
      #   example: ""
      Pha_p_nh_n__c:
        description: Pháp nhân
        type: string
        example: ""
        maxLength: 255
      POS__c:
        description: POS Id Lookup(POS)
        type: string
        example: ""
      Priority:
        description: Priority
        type: string
        enum: ['Cao', 'Trung bình', 'Thấp']
      QDBT__c:
        description: Quyết định bồi thường đính kèm
        type: string
      Reason:
        description: Reason
        type: string
        enum: ['Yêu cầu hỗ trợ','Tư vấn sử dụng dịch vụ','Phản ánh khiếu nại']
      Sales_Order__c:
        description: Lookup Sales Order Id
        type: string
        example: ""
      Service__c:
        description: Lookup Service Id (Product Id)
        type: string
        example: ""
      # SourceId:
      #   description: Lookup Source Id
      #   type: string
      #   example: ""
      So_Ho_So__c:
        description: Số Hồ Sơ
        type: string
        example: ""
        maxLength: 80
      So_phieu_khieu_nai__c:
        description: Số phiếu khiếu nại
        type: string
        example: ""
        maxLength: 20
      So_Tien_Phai_Boi_Thuong__c:
        description: Số Tiền Phải Bồi Thường
        type: string
        example: ""
      Status:
        description: Status
        type: string
        enum: ['Mới tạo','Đang xử lí','Đã kết luận','Đã đóng','Mở lại','Hủy']
      Subject:
        description: Subject
        type: string
        example: "Subject"
        maxLength: 255
      SuppliedCompany:
        description: Web Company
        type: string
        example: ""
        maxLength: 80
      SuppliedEmail:
        description: Web Email
        type: string
        example: ""
      SuppliedName:
        description: Web Name
        type: string
        example: ""
        maxLength: 80
      SuppliedPhone:
        description: Web Phone
        type: string
        example: ""
        maxLength: 40
      S_quy_t_i_nh_BT__c:
        description: Số quyết định BT
        type: string
        example: ""
        maxLength: 20
      Tai_Lieu_Dinh_Kem__c:
        description: Tai Lieu Dinh Kem
        type: string
        example: ""
      Thoi_gian1__c:
        description: Thời Gian
        type: string
        example: "2019-11-12T05:00:00.000+0000"
      Ho_tro__c:
        type: array
        items: 
          $ref: "#/definitions/Ho_tro__c"
    xml:
      name: case
  contact:
    type: object
    required:
      - LastName
    properties:
      AccountId:
        description: Id của Account
        type: string
        example: "AO923FH832LO"
      AssistantName:
        description: Nhân viên hỗ trợ
        type: string
        example: ""
        maxLength: 40
      AssistantPhone:
        description: Số điện thoại nhân viên hỗ trợ
        type: string
        example: ""
      Birthdate:
        description: Ngày sinh
        type: string
        example: "2019-25-07"
      FirstName:
        description: First Name
        type: string
        example: "First Name"
      OwnerId:
        description: User Id Lookup(User,Group)
        type: string
        example: ""
      LastName:
        description: Last Name
        type: string
        example: "Last Name"
      MiddleName:
        description: Middle Name
        type: string
        example: "Middle Name"
      Title:
        description: Title
        type: string
        example: ""
        maxLength: 128
      Email:
        description: Email
        type: string
        example: ""
      Employee__c:
        description: Nhân viên quản lý (Lookup Employee)
        type: string
        example: ""
      Phone:
        description: Phone
        type: string
        example: ""
      HomePhone:
        description: Phone
        type: string
        example: ""
      Tax_Code_ID__c:
        description: Tax Code ID
        type: string
        example: ""
        maxLength: 20
      MobilePhone:
        description: Mobile Phone
        type: string
        example: ""
      Fax:
        description: Fax
        type: string
        example: ""
      Department:
        description: Bộ phận phòng ban
        type: string
        example: "Department"
        maxLength: 80
      LeadSource:
        description: Lead Source
        type: string
        enum: ['Quảng cáo truyền thống','Nội bộ','Bộ phận CSKH','Hội nghị khách hàng','Đối tác giới thiệu','Bộ/ Ban ngành/ Tổ chức','Giao dịch tại quầy','Mạng xã hội','Website','Nguồn unqualified','Khách hàng giới thiệu']
      Description:
        description: Mô tả
        type: string
        example: ""
      MailingCity:
        description: Mailing City
        type: string
        example: ""
      MailingCountry:
        description: Mailing Country
        type: string
        example: ""
      MailingPostalCode:
        description: Mailing Postal Code
        type: string
        example: ""
      MailingState:
        description: Mailing State
        type: string
        example: ""
      MailingStreet:
        description: Mailing Street
        type: string
        example: ""
      OtherPhone:
        description: Số điện thoại khác
        type: string
        example: ""
      ReportsToId:
        description: Người nhận báo cáo (Lookup Contact)
        type: string
        example: ""
      Vendor:
        description: Nhà cung cấp
        type: string
        example: ""
      # Note:
      #   type: array
      #   items:
      #     $ref: "#/definitions/note"
    xml:
      name: contact
  deal:
    type: object
    required:
      - Name
      - AccountId
      - CloseDate
      - StageName
    properties:
      AccountId:
        description: AccountId Lookup(Account)
        type: string
        example: "0012v00002ONMKKAA5"
      Amount:
        description: Amount
        type: number
        example: 0
      CloseDate:
        description: "Close Date Ex: 2019-29-07"
        type: string
        example: "2019-29-07"
      Contact__c:
        description: Contact
        type: string
        example: ""
      Customer_s_Reference_Code__c:
        description: Customer Reference Code
        type: string
        example: ""
      Customer_s_Service__c:
        description: Customer Service
        type: string
        example: ""
      Description:
        description: Description
        type: string
        example: "Description"
      Download_File__c:
        description: Download File
        type: string
        example: ""
      Effective_Date__c:
        description: Effective Date
        type: string
        example: "2019-29-07"
      Employee__c:
        description: Employee__c lookup to Id of Object Employee
        type: string
        example: ""
      ExpectedRevenue:
        description: Expected Revenue
        type: number
        example: 0
      LeadSource:
        description: Lead Source
        type: string
        example: ""
      CurrencyIsoCode:
        description: Currency Iso Code
        type: string
        example: ""  
      Name:
        description: Name
        type: string
        example: "Deal Name"
      OwnerId:
        description: User Id Lookup(User,Group)
        type: string
        example: ""
      Post_Office__c:
        description: Post Office
        type: string
        example: ""
      CampaignId:
        description: CampaignId lookup to Id of Object Campaign
        type: string
        example: ""
      Type:
        description: Type
        type: string
        example: ""
      StageName:
        description: Stage Name
        type: string
        example: ""
    xml:
      name: deal
  employee:
    type: object
    required:
      - Name
    properties:
      CurrencyIsoCode:
        description: Currency
        type: string
        example: ""
      Department__c:
        description: Department
        type: string
        maxLength: 120
        example: ""
      Email__c:
        description: Email
        type: string
        example: ""
      Employee_Code__c:
        description: Employee Code
        type: string
        maxLength: 100
        example: ""
      Employee_Manager__c:
        description: Employee_Manager__c lookup to Id of Object User.
        type: string
        example: ""
      Mobile__c:
        description: Mobile
        type: string
        example: ""
      Name:
        description: Name
        type: string
        maxLength: 80
        example: ""
      OwnerId:
        description: Trường user lookup
        type: string
        example: ""
      Phone__c:
        description: Phone__c
        type: string
        example: ""
      Post_Office__c:
        description: Post Office
        type: string
        example: ""
      Status__c:
        description: Status
        type: string
        example: ""
      Type__c:
        description: Type
        type: string
        maxLength: 200
        example: ""
    xml:
      name: employee
  Ho_tro__c:
    type: object
    properties:
      Contact_Name__c:
        description: Contact Id Lookup(Contact)
        type: string
        example: ""
      DateTime_Change__c:
        description: Date Time Change
        type: string
        example: ""
      DateTime_Required__c:
        description: Date Time Required
        type: string
        example: ""
      New_Pickup_Country__c:
        description: New Pickup Country
        type: string
        example: ""
        maxLength: 80
      New_Pickup_Name__c:
        description: New Pickup Name
        type: string
        example: ""
        maxLength: 255
      New_Pickup_Phone__c:
        description: New Pickup Phone
        type: string
        example: ""
        maxLength: 255
      New_Pickup_State__c:
        description: New Pickup State
        type: string
        example: ""
        maxLength: 255
      New_Pickup_Street__c:
        description: New Pickup Street
        type: string
        example: ""
        maxLength: 255
      New_Pickup_ward__c:
        description: New Pickup Ward
        type: string
        example: ""
        maxLength: 255
      New_Pickup_Zipcode__c:
        description: New Pickup Zipcode
        type: string
        example: ""
        maxLength: 255
      New_Receiver_City__c:
        description: New Receiver City
        type: string
        example: ""
        maxLength: 80
      New_Receiver_Country__c:
        description: New Receiver Country
        type: string
        example: ""
        maxLength: 80
      New_Receiver_Name__c:
        description: New Receiver Name
        type: string
        example: ""
        maxLength: 255
      New_Receiver_Phone__c:
        description: New Receiver Phone
        type: string
        example: ""
      New_Receiver_State__c:
        description: New Receiver State
        type: string
        example: ""
        maxLength: 80
      New_Receiver_Street__c:
        description: New Receiver Street
        type: string
        example: ""
        maxLength: 80
      New_Receiver_Zipcode__c:
        description: New Receiver Zipcode
        type: string
        example: ""
        maxLength: 80
      New_Sender_City__c:
        description: New Sender City
        type: string
        example: ""
        maxLength: 80
      New_Sender_Country__c:
        description: New Sender Country
        type: string
        example: ""
        maxLength: 80
      New_Sender_Name__c:
        description: New Sender Name
        type: string
        example: ""
        maxLength: 255
      New_Sender_Phone__c:
        description: New Sender Phone
        type: string
        example: ""
      New_Sender_State__c:
        description: New Sender State
        type: string
        example: ""
        maxLength: 80
      New_Sender_Street__c:
        description: New Sender Street
        type: string
        example: ""
        maxLength: 80
      New_Sender_Zipcode__c:
        description: New Sender Zipcode
        type: string
        example: ""
        maxLength: 80
      Ngay_gio_thu_gom__c:
        description: Ngày/giờ thu gom
        type: string
        example: ""
      Sales_Order__c:
        description: Sales Order
        type: string
        example: ""
      S_tin_phi_thu__c:
        description: Số tiền phải thu
        type: string
        example: ""
      S_tin_sau_iu_chnh__c:
        description: Số tiền sau điều chỉnh
        type: string
        example: ""
      S_tin__c:
        description: Số tiền
        type: string
        example: ""
      Tin_cc_Ph_hy_n_hng__c:
        description: Tiền cước/ Phí hủy đơn hàng
        type: string
        example: ""
      Tn_loi_hng_c_pht__c:
        description: Tên, loại hàng được phát
        type: string
        example: ""
        maxLength: 255
    xml:
      name: Ho_tro__c
  lead:
    type: object
    required:
      - LastName
      - Company
      - Status
    properties:
      AnnualRevenue:
        description: AnnualRevenue
        type: number
        format: currency
      Company:
        description: Company
        type: string
        example: "CMCTS"
      CurrencyIsoCode:
        description: Currency Iso Code
        type: string
        example: ""
      Description:
        description: Description
        type: string
        example: ""
      Email:
        description: Email
        type: string
        example: ""
      Employee__c:
        description: Employee__c lookup to Id of Object Employee
        type: string
        example: ""
      Fax:
        description: Fax
        type: string
        example: ""
      FirstName:
        description: FirstName
        type: string
        example: ""
      Industry:
        description: Industry
        type: string
        enum: ['Agriculture','Apparel','Banking','Biotechnology','Chemicals','Communications','Construction','Consulting','Education','Electronics','Energy','Engineering','Entertainment','Environmental','Finance','Food & Beverage','Government','Healthcare','Hospitality','Insurance','Machinery','Manufacturing','Media','Not For Profit','Other','Recreation','Retail','Shipping','Technology','Telecommunications','Transportation','Utilities']
      # Jigsaw:
      #   description: Jigsaw
      #   type: string
      #   example: ""
      #   maxLength: 20
      LastName:
        description: LastName
        type: string
        example: ""
      LeadSource:
        description: LeadSource
        type: string
        enum: ['Quảng cáo truyền thống','Nội bộ','Bộ phận CSKH','Hội nghị khách hàng','Đối tác giới thiệu','Bộ/ Ban ngành/ Tổ chức','Giao dịch tại quầy','Mạng xã hội','Website','Nguồn unqualified','Khách hàng giới thiệu']
      MiddleName:
        description: MiddleName
        type: string
        example: ""
      MobilePhone:
        description: MobilePhone
        type: string
        example: ""
      # NumberOfEmployees:
      #   description: Number Of Employees
      #   type: number
      #   example: 0
      OwnerId:
        description: Owner Id
        type: string
        example: ""
      Phone:
        description: Phone
        type: string
        example: ""
      Rating:
        description: Rating
        type: string
        enum: ['Đã giao dịch','Đang giao dịch','Ngừng giao dịch','Bị từ chối','Từ bỏ']
      Status:
        description: Lead Status
        type: string
        enum: ['Cố gắng liên lạc', 'Sẽ liên lạc', 'Đã liên lạc được', 'Cơ hội không rõ ràng', 'Cơ hội bị mất']
      Title:
        description: Title
        type: string
        example: ""
        maxLength: 128
      Website:
        description: Website
        type: string
        example: ""
    xml:
      name: lead
  leadConvert:
    type: object
    required:
      - LeadId
    properties:
      LeadId:
        description: Lead Id
        type: string
        example: ""
      AccountId:
        description: Account Id
        type: string
        example: ""
      ContactId:
        description: Contact Id
        type: string
        example: ""
      OpportunityName:
        description: Opportunity Name
        type: string
        example: ""
      isCreateOpp:
        description: is create opportunity
        type: boolean
        example: true
    xml:
      name: LeadConvert
  note:
    type: object
    required:
      - Title
      - Content
    properties:
      Title:
        description: Title
        type: string
        example: "Title"
      Content:
        description: Status
        type: string
        example: "Content"
    xml:
      name: note
  product:
    type: object
    properties:
      Name:
        description: Name
        type: string
        example: "CRM"
      ProductCode:
        description: Product Code
        type: string
        example: ""
      Sales_Start_Date__c:
        description: Sales Start Date
        type: string
        example: "2019-29-07"
      Sales_End_Date__c:
        description: Sales End Date
        type: string
        example: "2019-29-07"
      Support_Start_Date__c:
        description: Support Start Date
        type: string
        example: "2019-29-07"
      Support_End_Date__c:
        description: Support End Date
        type: string
        example: "2019-29-07"
      System_using__c:
        description: System using
        type: string
        example: ""
      Unit_Price__c:
        description: Unit Price
        type: string
        example: ""
    xml:
      name: product
  RecordType:
    type: object
    required:
      - Name
    properties:
      Name:
        description: Name
        type: string
        example: "Record Type Name"
    xml:
      name: RecordType
  Picklist:
    type: object
    required:
      - values
    properties:
      values:
        description: values
        type: string
        example: ""
    xml:
      name: RecordType
  Sales_Order__c:
    type: object
    required:
      - Name
    properties:
      Account_No__c:
        description: Account No
        type: string
        example: ""
        maxLength: 100
      Account__c:
        description: Account Id
        type: string
        example: ""
      Activity__c:
        description: Activity Id
        type: string
        example: ""
      Billing_Account__c:
        description: Billing Account
        type: string
        example: ""
      Billing_City__c:
        description: Billing City
        type: string
        example: ""
      Billing_Country__c:
        description: Billing Country
        type: string
        example: ""
      Billing_Full_Address__c:
        description: Billing Full Address
        type: string
        example: ""
      Billing_State__c:
        description: Billing State
        type: string
        example: ""
      Billing_Street__c:
        description: Billing Street
        type: string
        example: ""
      Billing_Zipcode__c:
        description: Billing Zipcode
        type: string
        example: ""
      Carrier__c:
        description: Carrier
        type: string
        example: ""
      Collection_Transaction_ID__c:
        description: Collection Transaction ID
        type: string
        example: ""
      Commitment_of_Sender__c:
        description: Commitment of Sender
        type: string
        example: ""
      Contact__c:
        description: Contact Id
        type: string
        example: ""
      Country_Delivery__c:
        description: Country Delivery
        type: string
        example: ""
      CurrencyIsoCode:
        description: Currency Iso Code
        type: string
        example: ""
      Datetime_Acceptanced__c:
        description: Datetime Acceptanced
        type: string
        example: ""
      Datetime_Created__c:
        description: Datetime Created
        type: string
        example: ""
      Deal__c:
        description: Deal Id
        type: string
        example: ""
      Delivery_Fail_Option__c:
        description: Delivery Fail Option
        type: string
        enum: ['Chuyển hoàn', 'Hủy bưu gửi']
      Description_Information__c:
        description: Description Information
        type: string
        example: ""
      Employee_Delivery_Name__c:
        description: Employee Delivery Name
        type: string
        example: ""
      Employee_Delivery_Phone__c:
        description: Employee Delivery Phone
        type: string
        example: ""
      Employee_Owner_Phone__c:
        description: Employee Owner Phone
        type: string
        example: ""
      Employee_Pickup_Name__c:
        description: Employee Pickup Name
        type: string
        example: ""
      Employee_Pickup_Phone__c:
        description: Employee Pickup Phone
        type: string
        example: ""
      Extra_Requirement__c:
        description: Extra Requirement
        type: string
        example: ""
      Lead_Time__c:
        description: Lead Time
        type: string
        example: ""
      Location_Details__c:
        description: Location Details
        type: string
        enum: ['Nội tỉnh', 'Liên tỉnh', 'Inbound', 'Outbound']
      Location_Type__c:
        description: Location Type
        type: string
        enum: ['Domestic', 'Oversea']
      Location__c:
        description: Location
        type: string
        example: ""
      Main_Fee__c:
        description: Main Fee
        type: string
        example: ""
      Name:
        description: Name
        type: string
        example: ""
        maxLength: 80
      Net_Weight__c:
        description: Net Weight
        type: string
        example: ""
      Next_Step_Activity__c:
        description: Next Step Activity
        type: string
        example: ""
      Next_Step_ID__c:
        description: Next Step ID
        type: string
        example: ""
      Now_Status_Activity__c:
        description: Now Status Activity
        type: string
        example: ""
      Now_Status_ID__c:
        description: Now Status ID
        type: string
        example: ""
      Operational_Instruction__c:
        description: Operational Instruction
        type: string
        example: ""
      Order_Code__c:
        description: Order Code
        type: string
        example: ""
      OwnerId:
        description: OwnerId
        type: string
        example: ""
      Phi_di_ch_vu_GTGT__c:
        description: Phí dịch vụ GTGT
        type: string
        example: ""
        maxLength: 20
      Pickup_City__c:
        description: Pickup City
        type: string
        example: ""
      Pickup_Country__c:
        description: Pickup Country
        type: string
        example: ""
      Pickup_Email__c:
        description: Pickup Email
        type: string
        example: ""
      Pickup_Name__c:
        description: Pickup Name
        type: string
        example: ""
        maxLength: 100
      Pickup_Phone__c:
        description: Pickup Phone
        type: string
        example: ""
      Pickup_State__c:
        description: Pickup State
        type: string
        example: ""
      Pickup_Street__c:
        description: Pickup Street
        type: string
        example: ""
      Pickup_Zipcode__c:
        description: Pickup Zipcode
        type: string
        example: ""
      Post_discount_fee__c:
        description: Post discount charge
        type: string
        example: ""
      PO_Acceptance__c:
        description: PO Acceptance Id (Unit)
        type: string
        example: ""
      PO_Delivery__c:
        description: PO Delivery Id (Unit)
        type: string
        example: ""
      Primary_Service__c:
        description: Primary Service Id (Service)
        type: string
        example: ""
      Purchase_Order__c:
        description: Purchase Order
        type: string
        example: ""
      Quote__c:
        description: Quote Id
        type: string
        example: ""
      Reference_No__c:
        description: Reference No
        type: string
        example: ""
      Request_Transaction_ID__c:
        description: Request Transaction ID
        type: string
        example: ""
      Sales_Commission__c:
        description: Sales Commission
        type: string
        example: ""
      Sending_Method__c:
        description: Sending Method
        type: string
        enum: ['Tại bưu cục', 'Tại địa chỉ']
      Sender_Name__c:
        description: Sender Name
        type: string
        example: ""
        maxLength: 100
      Sender_Phone__c:
        description: Sender Phone
        type: string
        example: ""
      Sender_Email__c:
        description: Sender Email
        type: string
        example: ""
      Sender_Country__c:
        description: Sender Country
        type: string
        example: ""
        maxLength: 250
      Sender_City__c:
        description: Sender City
        type: string
        example: ""
        maxLength: 250
      Sender_State__c:
        description: Sender State
        type: string
        example: ""
        maxLength: 250
      Sender_Street__c:
        description: Sender Street
        type: string
        example: ""
        maxLength: 250
      Sender_Ward__c:
        description: Sender Ward
        type: string
        example: ""
        maxLength: 250
      Sender_Full_Address__c:
        description: Sender Full Address
        type: string
        example: ""
      Sender_Zipcode__c:
        description: Sender Zipcode
        type: string
        example: ""
      So_luong__c:
        description: Số lượng
        type: string
        example: ""
      Ten_hang_hoa__c:
        description: Tên hàng hóa
        type: string
        example: ""
      Gia_tri_hang_hoa__c:
        description: Giá trị hàng hóa (Currency)
        type: string
        example: ""
      Length__c:
        description: Length
        type: string
        example: ""
        maxLength: 20
      Width__c:
        description: Width
        type: string
        example: ""
        maxLength: 20
      Height__c:
        description: Height
        type: string
        example: ""
        maxLength: 20
      Shipment_No__c:
        description: Shipment No
        type: string
        example: ""
      Shipping_City__c:
        description: Shipping City
        type: string
        example: ""
      Shipping_Country__c:
        description: Shipping Country
        type: string
        example: ""
      Shipping_Email__c:
        description: Shipping Email
        type: string
        example: ""
      Shipping_Full_Address__c:
        description: Shipping Full Address
        type: string
        example: ""
      Shipping_Name__c:
        description: Shipping Name
        type: string
        example: ""
        maxLength: 100
      Shipping_Phone__c:
        description: Shipping Phone
        type: string
        example: ""
      Shipping_State__c:
        description: Shipping State
        type: string
        example: ""
      Shipping_Street__c:
        description: Shipping Street
        type: string
        example: ""
      Shipping_Zipcode__c:
        description: Shipping Zipcode
        type: string
        example: ""
      Statement_Transaction_ID__c:
        description: Statement Transaction ID
        type: string
        example: ""
      Terms_and_Conditions__c:
        description: Terms and Conditions
        type: string
        example: ""
      Total_Weight__c:
        description: Total Weight
        type: string
        example: ""
      Type_Of_Shipment__c:
        description: Type Of Shipment
        type: string
        example: ""
      T_ng_phi__c:
        description: Tổng phí
        type: string
        example: ""
        maxLength: 20
      Added_Value:
        type: array
        items: 
          $ref: "#/definitions/Added_Value_in_Sales_Order__c"
    xml:
      name: Sales_Order__c
  status:
    type: object
    required:
      - Name
      - Tracking_Code__c
    properties:
      CurrencyIsoCode:
        description: Currency
        type: string
        example: ""
      Datetime_Created__c:
        description: Datetime Created
        type: string
        example: "2019-07-29T03:47:54.000+0000"
      Description__c:
        description: Description
        type: string
        example: ""
      Location__c:
        description: Location
        type: string
        maxLength: 255
        example: ""
      Name:
        description: Name(Status Code)
        type: string
        maxLength: 80
        example: "CODE"
      StatusText__c:
        description: Status Text
        type: string
        maxLength: 255
        example: ""
      Tracking_Code__c:
        description: Tracking Code (Sales Order Code / Transaction)
        type: string
        example: "a0A2v00000q6YQcEAM"
    xml:
      name: item
  task:
    type: object
    required:
      - Subject
    properties:
      Subject:
        description: Subject
        type: string
        example: "mail: Viet Nam Post Case # 00019737:  Yêu cầu làm rõ nguyên nhân đơn hàng EV992819734VN 10 ngày trời vẫn chưa tới nơi."
      Description:
        description: Description
        type: string
        example: ""
      WhatId:
        description: Id of Object
        type: string
        example: "5002v00002RyPw2AAF"
      WhoId:
        description: Id of User create Task
        type: string
        example: "0032v00002rTtyNAAS"
      Record_Url__c:
        description: Record url
        type: string
        example: ""
      TaskSubtype:
        description: Task Subtype
        type: string
        example: "Email"
      Status:
        description: Status
        type: string
        example: "Completed"
      Priority:
        description: Priority
        type: string
        example: "Normal"
    xml:
      name: task
  Vi_pham__c:
    type: object
    required:
      - Case_Number__c
    properties:
      Case_Number__c:
        description: Case Id Lookup(Case)
        type: string
        example: ""
      Khu_vi_phm__c:
        description: Khâu vi phạm
        type: string
        example: ""
        maxLength: 255
      Li_vi_phm__c:
        description: Lỗi vi phạm
        type: string
        example: ""
        maxLength: 255
      Ni_dung_vi_phm__c:
        description: Nội dung vi phạm
        type: string
        example: ""
      n_v_i_tac_vi_phm__c:
        description: Đơn vị/ Đối tác vi phạm
        type: string
        example: ""
        maxLength: 255
      OwnerId:
        description: User Id Lookup(User,Group)
        type: string
        example: ""
      S_tin_bi_thng__c:
        description: Số tiền bồi thường
        type: number
        example: 100000
    xml:
      name: Vi_pham__c
  Tien_trinh_xu_li__c:
    type: object
    required:
      - Case_Number__c
    properties:
      Case_Number__c:
        description: Case Id Lookup(Case)
        type: string
        example: ""
      Don_vi_lien_quan__c:
        description: Đơn vị liên quan
        type: string
        example: ""
        maxLength: 255
      Don_vi_tiep_nhan__c:
        description: Đơn vị tiếp nhận
        type: string
        example: ""
        maxLength: 255
      Ni_dung_x_li__c:
        description: Nội dung xử lí
        type: string
        example: ""
      n_vi_x_li_tip_theo__c:
        description: Đơn vị xử lí tiếp theo
        type: string
        example: ""
        maxLength: 255
      Tai_lieu_dinh_kem__c:
        description: Tài liệu đính kèm
        type: string
        example: ""
      Thoi_Gian1__c:
        description: Thời gian
        type: string
        example: "2019-07-29T03:47:54.000+0000"
    xml:
      name: Tien_trinh_xu_li__c
  POS__c:
    type: object
    required:
      - Address_Code__c
    properties:
      Address__c:
        description: Address
        type: string
        example: ""
      Address_Code__c:
        description: Address Code
        type: string
        example: ""
    xml:
      name: POS__c
  Error:
    type: object
    properties:
      statusCode:
        type: integer
        minimum: 400
        maximum: 600
        description: The HTTP status code.
      statusMessage:
        type: string
      body:
        type: object
        properties:
          message:
            description: Failure
            type: string
          errorCode:
            description: Invalid_Params
  Success:
    type: object
    properties:
      statusCode:
        type: integer
        minimum: 100
        maximum: 399
        description: The HTTP status code.
      statusMessage:
        type: string
      body:
        type: object
        properties:
          message:
            description: Deleted success
            type: string
          errorCode:
            description: DELETE_SESSION
  PostSuccess:
    type: object
    properties:
      statusCode:
        type: integer
        minimum: 100
        maximum: 399
        description: The HTTP status code.
      statusMessage:
        type: string
      body:
        type: object
        properties:
          id:
            description: 0060w000002j6uSAAQ
            type: string
          success:
            description: true
          errors:
            description: []
components:
  schemas:
    Ho_tro__c:
      $ref: "#/definitions/Ho_tro__c"
    Tien_trinh_xu_li__c:
      $ref: "#/definitions/Tien_trinh_xu_li__c"
    POS__c:
      $ref: "#/definitions/POS__c"
    Vi_pham__c:
      $ref: "#/definitions/Vi_pham__c"
    account:
      $ref: "#/definitions/account"
    accounts:
      type: array
      items: 
        $ref: "#/definitions/account"
    task:
      $ref: "#/definitions/task"
    tasks:
      type: array
      items: 
        $ref: "#/definitions/task"
    contact:
      $ref: "#/definitions/contact"
    contacts:
      type: array
      items: 
        $ref: "#/definitions/contact"
    product:
      $ref: "#/definitions/product"
    products:
      type: array
      items: 
        $ref: "#/definitions/product"
    lead:
      $ref: "#/definitions/lead"
    leads:
      type: array
      items: 
        $ref: "#/definitions/lead"
    leadConvert:
      type: object
      properties:
        ListLeadConvert:
          type: array
          items:
            $ref: "#/definitions/leadConvert"
    deal:
      $ref: "#/definitions/deal"
    deals:
      type: array
      items: 
        $ref: "#/definitions/deal"
    case:
      $ref: "#/definitions/case"
    RecordType:
      $ref: "#/definitions/RecordType"
    Sales_Order__c:
      $ref: "#/definitions/Sales_Order__c"
    Sales_Order__cs:
      type: array
      items: 
        $ref: "#/definitions/Sales_Order__c"
    Added_Value_in_Sales_Order__c:
      $ref: "#/definitions/Added_Value_in_Sales_Order__c"
    Added_Value_in_Sales_Order__cs:
      type: array
      items: 
        $ref: "#/definitions/Added_Value_in_Sales_Order__c"
    status:
      $ref: "#/definitions/status"
    statuss:
      type: array
      items: 
        $ref: "#/definitions/status"
    employee:
      $ref: "#/definitions/employee"
    employees:
      type: array
      items: 
        $ref: "#/definitions/employee"
    note:
      $ref: "#/definitions/note"
    AuthPassword:
      type: object
      required:
        - client_id
        - client_secret
      properties:
        client_id:
          description: Client Id
          type: string
          example: "3MVG9G9pzCUSkzZvLnOPQUYT819Gj6RAO3LGCeRrufu2Yk2N28PI_oioRwfbxGC9xAFBzr"
        client_secret:
          description: Client Secret
          type: string
          example: "910310EC68B4492ADEPIO023F870001EDBCEF1DFAF97A56B7828F95892872FKPWKAUTT"
    ContentDLCreate:
      properties:
        statusCode:
          type: integer
        statusMessage:
          type: string
        body: object
    Error:
      type: object
      properties:
        status:
          type: integer
          minimum: 100
          maximum: 600
          description: The HTTP status code.
        error:
          type: string
        type:
          type: string
          description: 'A URI reference that identifies the problem type. It should provide human-readable documentation for the problem type. When this member is not present, its value is assumed to be "about:blank".'
        title:
          type: string
          description: 'A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.'
    InvalidError:
      description: Invalid data was sent
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            invalidFields:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                    description: The field name. Dot notation is used for nested object field names.
                  message:
                    type: string
              example:
                - field: field1
                  message: field1 is invalid
                - field: subObject.field2
                  message: field2 is invalid
                - field: subObject.field2
                  message: another error in the field2
  responses:
    AccessForbidden:
      description: 'Access forbidden, invalid token was used'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Found:
      description: Resource was moved
      headers:
        Location:
          schema:
            type: string
    InvalidDataError:
      description: Invalid data was sent
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidError'
    NotFound:
      description: Resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  securitySchemes:
    ApiKey:
      description: |
        Use access_token from login.
      name: Authorization
      type: apiKey
      in: header
